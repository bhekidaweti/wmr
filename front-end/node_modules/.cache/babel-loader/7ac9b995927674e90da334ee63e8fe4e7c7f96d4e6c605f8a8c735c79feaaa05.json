{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\Components\\\\AddMemeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMemeForm = _ref => {\n  _s();\n  let {\n    onMemeAdded\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/memes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        categories,\n        image_url: imageUrl\n      })\n    });\n    const newMeme = await response.json();\n    onMemeAdded(newMeme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Categories (comma-separated)\",\n      value: categories,\n      onChange: e => setCategories(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Image URL\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMemeForm, \"7lWElqqng55Z3nYtP5FNoSyEmVc=\");\n_c = AddMemeForm;\nexport default AddMemeForm;\nvar _c;\n$RefreshReg$(_c, \"AddMemeForm\");","map":{"version":3,"names":["React","useState","AddMemeForm","onMemeAdded","title","setTitle","description","setDescription","categories","setCategories","imageUrl","setImageUrl","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","image_url","newMeme","json","target","value"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/Components/AddMemeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddMemeForm = ({ onMemeAdded }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:5000/memes', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ title, description, categories, image_url: imageUrl }),\r\n    });\r\n    const newMeme = await response.json();\r\n    onMemeAdded(newMeme);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Categories (comma-separated)\"\r\n        value={categories}\r\n        onChange={(e) => setCategories(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Image URL\"\r\n        value={imageUrl}\r\n        onChange={(e) => setImageUrl(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add Meme</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddMemeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEjB,KAAK;QAAEE,WAAW;QAAEE,UAAU;QAAEc,SAAS,EAAEZ;MAAS,CAAC;IAC9E,CAAC,CAAC;IACF,MAAMa,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IACrCrB,WAAW,CAACoB,OAAO,CAAC;EACtB,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEX,YAAa;IAAA,wBAC3B;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,OAAO;MACnB,KAAK,EAAER,KAAM;MACb,QAAQ,EAAGS,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;MAC1C,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eACF;MACE,WAAW,EAAC,aAAa;MACzB,KAAK,EAAEpB,WAAY;MACnB,QAAQ,EAAGO,CAAC,IAAKN,cAAc,CAACM,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;MAChD,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eACF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,8BAA8B;MAC1C,KAAK,EAAElB,UAAW;MAClB,QAAQ,EAAGK,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACY,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C,eACF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,WAAW;MACvB,KAAK,EAAEhB,QAAS;MAChB,QAAQ,EAAGG,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACY,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7C,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GA/CIxB,WAAW;AAAA,KAAXA,WAAW;AAiDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}