{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"../wiki-logo.png\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./Footer\";\nimport ScrapedMemes from \"./ScrapedMemes\";\nimport Shop from \"./Shop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/api/memes`).then(res => res.json()).then(data => setMemes(data));\n  }, []);\n  const filteredMemes = memes.filter(meme => meme.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Your encyclopedia of internet memes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search for a meme...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"input-group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Latest memes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScrapedMemes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: selectedMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedMeme.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${selectedMeme.image_url}`,\n              alt: selectedMeme.title,\n              className: \"meme-details-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedMeme.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Categories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), \" \", selectedMeme.categories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => setSelectedMeme(null),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-list\",\n            children: filteredMemes.map(meme => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-card\",\n              onClick: () => setSelectedMeme(meme),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${process.env.REACT_APP_API_URL}${meme.image_url}`,\n                alt: meme.title,\n                className: \"meme-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"whitesmoke\"\n                },\n                children: \"Click the meme to see details..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"meme-title\",\n                children: meme.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  color: \"orange\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, meme.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Merch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Shop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"tYXc6AW+fJlHP7ODflJGaLcm3Gk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","logo","Footer","ScrapedMemes","Shop","Home","memes","setMemes","selectedMeme","setSelectedMeme","searchQuery","setSearchQuery","fetch","process","env","REACT_APP_API_URL","then","res","json","data","filteredMemes","filter","meme","title","toLowerCase","includes","e","target","value","image_url","description","categories","map","color","id"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logo from \"../wiki-logo.png\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Footer from \"./Footer\";\r\nimport ScrapedMemes from \"./ScrapedMemes\";\r\nimport Shop from \"./Shop\";\r\n\r\nconst Home = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [selectedMeme, setSelectedMeme] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/api/memes`)\r\n      .then((res) => res.json())\r\n      .then((data) => setMemes(data));\r\n  }, []);\r\n\r\n  const filteredMemes = memes.filter((meme) =>\r\n    meme.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <ul>\r\n          <li>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </li>\r\n          <li>Your encyclopedia of internet memes!</li>\r\n          <li>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for a meme...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"input-group\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      </header>\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col\">\r\n          <h5>Latest memes...</h5>\r\n          <ScrapedMemes />\r\n        </div>\r\n    \r\n        <div className=\"col\">\r\n          <main>\r\n            {selectedMeme ? (\r\n              <div className=\"meme-details\">\r\n                <h2>{selectedMeme.title}</h2>\r\n                <img\r\n                  src={`${selectedMeme.image_url}`}\r\n                  alt={selectedMeme.title}\r\n                  className=\"meme-details-image\"\r\n                />\r\n                <p>{selectedMeme.description}</p>\r\n                <p>\r\n                  <strong>Categories:</strong> {selectedMeme.categories}\r\n                </p>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => setSelectedMeme(null)}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"meme-list\">\r\n                {filteredMemes.map((meme) => (\r\n                  <div\r\n                    key={meme.id}\r\n                    className=\"meme-card\"\r\n                    onClick={() => setSelectedMeme(meme)}\r\n                  >\r\n                    <img\r\n                      src={`${process.env.REACT_APP_API_URL}${meme.image_url}`}\r\n                      alt={meme.title}\r\n                      className=\"meme-image\"\r\n                    />\r\n                    <p style={{ color: \"whitesmoke\" }}>Click the meme to see details..</p>\r\n                    <h3 className=\"meme-title\">{meme.title}</h3>\r\n                    <hr style={{ color: \"orange\" }}></hr>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </main>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h5>Merch</h5>\r\n          <Shop />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}