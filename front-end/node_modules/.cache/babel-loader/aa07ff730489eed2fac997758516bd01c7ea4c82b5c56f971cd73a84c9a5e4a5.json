{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import\"../App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Admin=()=>{const[memes,setMemes]=useState([]);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[categories,setCategories]=useState('');const[image,setImage]=useState(null);const[editingMeme,setEditingMeme]=useState(null);useEffect(()=>{fetchMemes();},[]);const fetchMemes=async()=>{try{const response=await fetch('http://localhost:5000/api/memes');const data=await response.json();setMemes(data);}catch(error){console.error('Error fetching memes:',error);}};const handleSubmit=async e=>{e.preventDefault();const formData=new FormData();formData.append('title',title);formData.append('description',description);formData.append('categories',categories);if(image)formData.append('image',image);try{const response=await fetch(editingMeme?`http://localhost:5000/api/memes/${editingMeme.id}`:'http://localhost:5000/api/memes',{method:editingMeme?'PUT':'POST',body:formData});if(!response.ok)throw new Error('Failed to save meme');fetchMemes();setTitle('');setDescription('');setCategories('');setImage(null);setEditingMeme(null);}catch(error){console.error('Error saving meme:',error);}};const handleDelete=async id=>{try{await fetch(`http://localhost:5000/api/memes/${id}`,{method:'DELETE'});fetchMemes();}catch(error){console.error('Error deleting meme:',error);}};const handleEdit=meme=>{setTitle(meme.title);setDescription(meme.description);setCategories(meme.categories);setEditingMeme(meme);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(\"h2\",{children:editingMeme?'Edit Meme':'Add Meme'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value),required:true}),/*#__PURE__*/_jsx(\"textarea\",{class:\"form-control\",placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Categories\",value:categories,onChange:e=>setCategories(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"file\",onChange:e=>setImage(e.target.files[0])}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",type:\"submit\",children:[editingMeme?'Update':'Add',\" Meme\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Meme List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"ul\",{children:memes.map(meme=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"img\",{src:`http://localhost:5000${meme.image_url}`,className:\"car\",alt:meme.title,style:{width:\"40\",height:\"40\"}}),/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"card-title\",children:meme.title}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:meme.description}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",onClick:()=>handleEdit(meme),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleDelete(meme.id),children:\"Delete\"})]})]},meme.id))})})]});};export default Admin;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","Admin","memes","setMemes","title","setTitle","description","setDescription","categories","setCategories","image","setImage","editingMeme","setEditingMeme","fetchMemes","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","formData","FormData","append","id","method","body","ok","Error","handleDelete","handleEdit","meme","className","children","to","onSubmit","type","placeholder","value","onChange","target","required","class","files","map","src","image_url","alt","style","width","height","onClick"],"sources":["C:/Users/DDR/desktop/projects/wiki-memes-react/front-end/src/Components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Admin= () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [editingMeme, setEditingMeme] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMemes();\r\n  }, []);\r\n\r\n  const fetchMemes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/memes');\r\n      const data = await response.json();\r\n      setMemes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching memes:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('categories', categories);\r\n    if (image) formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        editingMeme ? `http://localhost:5000/api/memes/${editingMeme.id}` : 'http://localhost:5000/api/memes',\r\n        {\r\n          method: editingMeme ? 'PUT' : 'POST',\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Failed to save meme');\r\n\r\n      fetchMemes();\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n      setEditingMeme(null);\r\n    } catch (error) {\r\n      console.error('Error saving meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/memes/${id}`, { method: 'DELETE' });\r\n      fetchMemes();\r\n    } catch (error) {\r\n      console.error('Error deleting meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (meme) => {\r\n    setTitle(meme.title);\r\n    setDescription(meme.description);\r\n    setCategories(meme.categories);\r\n    setEditingMeme(meme);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n     <Link to=\"/\" >Home</Link>\r\n      <h2>{editingMeme ? 'Edit Meme' : 'Add Meme'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea class=\"form-control\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Categories\" value={categories} onChange={(e) => setCategories(e.target.value)} />\r\n        <input className=\"form-control\" type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        <button className='btn btn-primary' type=\"submit\">{editingMeme ? 'Update' : 'Add'} Meme</button>\r\n      </form>\r\n      \r\n      <h2>Meme List</h2>\r\n      <div className=\"card\">\r\n      <ul>\r\n        {memes.map((meme) => (\r\n          <li key={meme.id}>\r\n            <img src={`http://localhost:5000${meme.image_url}`} className=\"car\" alt={meme.title} style={{width: \"40\", height:\"40\"}} />\r\n            <div class=\"card-body\">\r\n            <h3 className='card-title'>{meme.title}</h3>\r\n            <p className='card-text'>{meme.description}</p>\r\n            <button className='btn btn-dark' onClick={() => handleEdit(meme)}>Edit</button>\r\n            <button className='btn btn-danger' onClick={() => handleDelete(meme.id)}>Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}