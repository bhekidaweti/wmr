{"ast":null,"code":"import _slicedToArray from\"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ScrapedMemes=function ScrapedMemes(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),memes=_useState2[0],setMemes=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedMeme=_useState4[0],setSelectedMeme=_useState4[1];var APIurl=process.env.API_URL;useEffect(function(){axios.get(\"\".concat(APIurl,\"/api/scraped-memes\")).then(function(res){return setMemes(res.data);}).catch(function(err){return console.error(\"Error fetching memes:\",err);});},[APIurl]);return/*#__PURE__*/_jsx(\"div\",{children:selectedMeme?/*#__PURE__*/_jsxs(\"div\",{className:\"meme-details\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedMeme,alt:\"Full Meme\",className:\"meme-details-image\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return setSelectedMeme(null);},children:\"Close\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"meme-grid\",children:memes.map(function(meme){return/*#__PURE__*/_jsx(\"img\",{src:meme.image_url,alt:\"Scraped Meme\",className:\"meme-thumbnail\",onClick:function onClick(){return setSelectedMeme(meme.image_url);}},meme.id);})})});};export default ScrapedMemes;","map":{"version":3,"names":["React","useState","useEffect","axios","ScrapedMemes","memes","setMemes","selectedMeme","setSelectedMeme","APIurl","process","env","API_URL","get","then","res","data","catch","err","console","error","map","meme","image_url","id"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/src/Components/ScrapedMemes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ScrapedMemes = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [selectedMeme, setSelectedMeme] = useState(null);\r\n\r\n  const APIurl = process.env.API_URL;\r\n\r\n  useEffect(() => {\r\n    axios.get(`${APIurl}/api/scraped-memes`)\r\n      .then((res) => setMemes(res.data))\r\n      .catch((err) => console.error(\"Error fetching memes:\", err));\r\n  }, [APIurl]);\r\n\r\n  return (\r\n    <div>\r\n      {selectedMeme ? (\r\n        <div className=\"meme-details\">\r\n          <img src={selectedMeme} alt=\"Full Meme\" className=\"meme-details-image\" />\r\n          <button className=\"btn btn-danger\" onClick={() => setSelectedMeme(null)}>Close</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"meme-grid\">\r\n          {memes.map((meme) => (\r\n            <img\r\n              key={meme.id}\r\n              src={meme.image_url}\r\n              alt=\"Scraped Meme\"\r\n              className=\"meme-thumbnail\"\r\n              onClick={() => setSelectedMeme(meme.image_url)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapedMemes;\r\n"],"mappings":"8IAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAOC,MAAK,KAAM,OAAO,CAAC,wFAE1B,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzB,cAA0BH,QAAQ,CAAC,EAAE,CAAC,wCAA/BI,KAAK,eAAEC,QAAQ,eACtB,eAAwCL,QAAQ,CAAC,IAAI,CAAC,yCAA/CM,YAAY,eAAEC,eAAe,eAEpC,GAAMC,OAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,OAAO,CAElCV,SAAS,CAAC,UAAM,CACdC,KAAK,CAACU,GAAG,WAAIJ,MAAM,uBAAqB,CACrCK,IAAI,CAAC,SAACC,GAAG,QAAKT,SAAQ,CAACS,GAAG,CAACC,IAAI,CAAC,GAAC,CACjCC,KAAK,CAAC,SAACC,GAAG,QAAKC,QAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,GAAC,CAChE,CAAC,CAAE,CAACT,MAAM,CAAC,CAAC,CAEZ,mBACE,qBACGF,YAAY,cACX,aAAK,SAAS,CAAC,cAAc,wBAC3B,YAAK,GAAG,CAAEA,YAAa,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,EAAG,cACzE,eAAQ,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAE,yBAAMC,gBAAe,CAAC,IAAI,CAAC,EAAC,UAAC,OAAK,EAAS,GACnF,cAEN,YAAK,SAAS,CAAC,WAAW,UACvBH,KAAK,CAACgB,GAAG,CAAC,SAACC,IAAI,qBACd,YAEE,GAAG,CAAEA,IAAI,CAACC,SAAU,CACpB,GAAG,CAAC,cAAc,CAClB,SAAS,CAAC,gBAAgB,CAC1B,OAAO,CAAE,yBAAMf,gBAAe,CAACc,IAAI,CAACC,SAAS,CAAC,EAAC,EAJ1CD,IAAI,CAACE,EAAE,CAKZ,EACH,CAAC,EAEL,EACG,CAEV,CAAC,CAED,cAAepB,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}