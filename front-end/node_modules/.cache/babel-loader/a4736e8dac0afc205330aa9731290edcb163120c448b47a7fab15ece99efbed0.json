{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import\"../App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Admin=function Admin(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),memes=_useState2[0],setMemes=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),categories=_useState8[0],setCategories=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),image=_useState10[0],setImage=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),editingMeme=_useState12[0],setEditingMeme=_useState12[1];useEffect(function(){fetchMemes();},[]);var fetchMemes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('http://localhost:5000/api/memes');case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setMemes(data);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Error fetching memes:',_context.t0);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function fetchMemes(){return _ref.apply(this,arguments);};}();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var formData,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:e.preventDefault();formData=new FormData();formData.append('title',title);formData.append('description',description);formData.append('categories',categories);if(image)formData.append('image',image);_context2.prev=6;_context2.next=9;return fetch(editingMeme?\"http://localhost:5000/api/memes/\".concat(editingMeme.id):'http://localhost:5000/api/memes',{method:editingMeme?'PUT':'POST',body:formData});case 9:response=_context2.sent;if(response.ok){_context2.next=12;break;}throw new Error('Failed to save meme');case 12:fetchMemes();setTitle('');setDescription('');setCategories('');setImage(null);setEditingMeme(null);_context2.next=23;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](6);console.error('Error saving meme:',_context2.t0);case 23:case\"end\":return _context2.stop();}},_callee2,null,[[6,20]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"http://localhost:5000/api/memes/\".concat(id),{method:'DELETE'});case 3:fetchMemes();_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.error('Error deleting meme:',_context3.t0);case 9:case\"end\":return _context3.stop();}},_callee3,null,[[0,6]]);}));return function handleDelete(_x2){return _ref3.apply(this,arguments);};}();var handleEdit=function handleEdit(meme){setTitle(meme.title);setDescription(meme.description);setCategories(meme.categories);setEditingMeme(meme);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(\"h2\",{children:editingMeme?'Edit Meme':'Add Meme'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Title\",value:title,onChange:function onChange(e){return setTitle(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"textarea\",{class:\"form-control\",placeholder:\"Description\",value:description,onChange:function onChange(e){return setDescription(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Categories\",value:categories,onChange:function onChange(e){return setCategories(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"file\",onChange:function onChange(e){return setImage(e.target.files[0]);}}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",type:\"submit\",children:[editingMeme?'Update':'Add',\" Meme\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Meme List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"ul\",{children:memes.map(function(meme){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"http://localhost:5000\".concat(meme.image_url),className:\"car\",alt:meme.title,style:{width:\"40\",height:\"40\"}}),/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"card-title\",children:meme.title}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:meme.description}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",onClick:function onClick(){return handleEdit(meme);},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return handleDelete(meme.id);},children:\"Delete\"})]})]},meme.id);})})})]});};export default Admin;","map":{"version":3,"names":["React","useState","useEffect","Link","Admin","memes","setMemes","title","setTitle","description","setDescription","categories","setCategories","image","setImage","editingMeme","setEditingMeme","fetchMemes","fetch","response","json","data","console","error","handleSubmit","e","preventDefault","formData","FormData","append","id","method","body","ok","Error","handleDelete","handleEdit","meme","target","value","files","map","image_url","width","height"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/src/Components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Admin= () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [editingMeme, setEditingMeme] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMemes();\r\n  }, []);\r\n\r\n  const fetchMemes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/memes');\r\n      const data = await response.json();\r\n      setMemes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching memes:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('categories', categories);\r\n    if (image) formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        editingMeme ? `http://localhost:5000/api/memes/${editingMeme.id}` : 'http://localhost:5000/api/memes',\r\n        {\r\n          method: editingMeme ? 'PUT' : 'POST',\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Failed to save meme');\r\n\r\n      fetchMemes();\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n      setEditingMeme(null);\r\n    } catch (error) {\r\n      console.error('Error saving meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/memes/${id}`, { method: 'DELETE' });\r\n      fetchMemes();\r\n    } catch (error) {\r\n      console.error('Error deleting meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (meme) => {\r\n    setTitle(meme.title);\r\n    setDescription(meme.description);\r\n    setCategories(meme.categories);\r\n    setEditingMeme(meme);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n     <Link to=\"/\" >Home</Link>\r\n      <h2>{editingMeme ? 'Edit Meme' : 'Add Meme'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea class=\"form-control\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Categories\" value={categories} onChange={(e) => setCategories(e.target.value)} />\r\n        <input className=\"form-control\" type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        <button className='btn btn-primary' type=\"submit\">{editingMeme ? 'Update' : 'Add'} Meme</button>\r\n      </form>\r\n      \r\n      <h2>Meme List</h2>\r\n      <div className=\"card\">\r\n      <ul>\r\n        {memes.map((meme) => (\r\n          <li key={meme.id}>\r\n            <img src={`http://localhost:5000${meme.image_url}`} className=\"car\" alt={meme.title} style={{width: \"40\", height:\"40\"}} />\r\n            <div class=\"card-body\">\r\n            <h3 className='card-title'>{meme.title}</h3>\r\n            <p className='card-text'>{meme.description}</p>\r\n            <button className='btn btn-dark' onClick={() => handleEdit(meme)}>Edit</button>\r\n            <button className='btn btn-danger' onClick={() => handleDelete(meme.id)}>Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}