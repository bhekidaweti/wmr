{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\Components\\\\ScrapedMemes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrapedMemes = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/scraped-memes\").then(res => res.json()).then(data => setMemes(data)).catch(err => console.error(\"Error fetching memes:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedMeme,\n        alt: \"Full Meme\",\n        className: \"meme-details-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => setSelectedMeme(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-grid\",\n      children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.image_url,\n        alt: \"Scraped Meme\",\n        className: \"meme-thumbnail\",\n        onClick: () => setSelectedMeme(meme.image_url)\n      }, meme.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrapedMemes, \"xVbSJGnqaE2/fJknvl4+yDeJ9As=\");\n_c = ScrapedMemes;\nexport default ScrapedMemes;\nvar _c;\n$RefreshReg$(_c, \"ScrapedMemes\");","map":{"version":3,"names":["React","useState","useEffect","ScrapedMemes","memes","setMemes","selectedMeme","setSelectedMeme","fetch","then","res","json","data","catch","err","console","error","map","meme","image_url","id"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/Components/ScrapedMemes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ScrapedMemes = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [selectedMeme, setSelectedMeme] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/scraped-memes\")\r\n      .then((res) => res.json())\r\n      .then((data) => setMemes(data))\r\n      .catch((err) => console.error(\"Error fetching memes:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        {selectedMeme ? (\r\n          <div className=\"meme-details\">\r\n            <img\r\n              src={selectedMeme}\r\n              alt=\"Full Meme\"\r\n              className=\"meme-details-image\"\r\n            />\r\n            <button className=\"btn btn-danger\" onClick={() => setSelectedMeme(null)}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"meme-grid\">\r\n            {memes.map((meme) => (\r\n              <img\r\n                key={meme.id}\r\n                src={meme.image_url}\r\n                alt=\"Scraped Meme\"\r\n                className=\"meme-thumbnail\"\r\n                onClick={() => setSelectedMeme(meme.image_url)}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapedMemes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UACKR,YAAY,gBACX;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QACE,GAAG,EAAEA,YAAa;QAClB,GAAG,EAAC,WAAW;QACf,SAAS,EAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAC9B,eACF;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAE,MAAMC,eAAe,CAAC,IAAI,CAAE;QAAA,UAAC;MAEzE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,gBAEN;MAAK,SAAS,EAAC,WAAW;MAAA,UACvBH,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACd;QAEE,GAAG,EAAEA,IAAI,CAACC,SAAU;QACpB,GAAG,EAAC,cAAc;QAClB,SAAS,EAAC,gBAAgB;QAC1B,OAAO,EAAE,MAAMZ,eAAe,CAACW,IAAI,CAACC,SAAS;MAAE,GAJ1CD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAMf;IAAC;MAAA;MAAA;MAAA;IAAA;EAEL;IAAA;IAAA;IAAA;EAAA,QAEC;AAEV,CAAC;AAAC,GAxCIjB,YAAY;AAAA,KAAZA,YAAY;AA0ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}