{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\Components\\\\AddMemeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMemeForm = _ref => {\n  _s();\n  let {\n    onMemeAdded\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState('');\n  const [image, setImage] = useState(null); // State to store the selected file\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create FormData to handle file uploads\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('categories', categories);\n    formData.append('image', image); // Attach the file\n\n    try {\n      const response = await fetch('http://localhost:5000/api/memes', {\n        method: 'POST',\n        body: formData // No need to set headers for FormData\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload meme');\n      }\n      const newMeme = await response.json();\n      onMemeAdded(newMeme); // Update the meme list\n      setTitle('');\n      setDescription('');\n      setCategories('');\n      setImage(null);\n    } catch (error) {\n      console.error('Error uploading meme:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        className: \"form-control\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Categories (comma-separated)\",\n        value: categories,\n        onChange: e => setCategories(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: e => setImage(e.target.files[0]) // Update state with the selected file\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Add Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMemeForm, \"lU47AP/Q0omsLz/wyR3y/KahpAI=\");\n_c = AddMemeForm;\nexport default AddMemeForm;\nvar _c;\n$RefreshReg$(_c, \"AddMemeForm\");","map":{"version":3,"names":["React","useState","AddMemeForm","onMemeAdded","title","setTitle","description","setDescription","categories","setCategories","image","setImage","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","newMeme","json","error","console","target","value","files"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/Components/AddMemeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddMemeForm = ({ onMemeAdded }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [image, setImage] = useState(null); // State to store the selected file\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create FormData to handle file uploads\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('categories', categories);\r\n    formData.append('image', image); // Attach the file\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/memes', {\r\n        method: 'POST',\r\n        body: formData, // No need to set headers for FormData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload meme');\r\n      }\r\n\r\n      const newMeme = await response.json();\r\n      onMemeAdded(newMeme); // Update the meme list\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n    } catch (error) {\r\n      console.error('Error uploading meme:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Categories (comma-separated)\"\r\n          value={categories}\r\n          onChange={(e) => setCategories(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setImage(e.target.files[0])} // Update state with the selected file\r\n          required\r\n        />\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Add Meme\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddMemeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}