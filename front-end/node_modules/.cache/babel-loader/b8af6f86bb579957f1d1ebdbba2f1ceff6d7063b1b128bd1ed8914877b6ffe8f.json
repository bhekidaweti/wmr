{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\Components\\\\AddMemeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMemeForm = _ref => {\n  _s();\n  let {\n    onMemeAdded,\n    memeToEdit,\n    onMemeUpdated,\n    onMemeDeleted\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState('');\n  const [image, setImage] = useState(null);\n  const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    if (memeToEdit) {\n      setTitle(memeToEdit.title);\n      setDescription(memeToEdit.description);\n      setCategories(memeToEdit.categories);\n      setEditing(true);\n    }\n  }, [memeToEdit]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('categories', categories);\n    if (image) formData.append('image', image);\n    try {\n      const url = editing ? `http://localhost:5000/api/memes/${memeToEdit.id}` : 'http://localhost:5000/api/memes';\n      const method = editing ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method,\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(editing ? 'Failed to update meme' : 'Failed to upload meme');\n      }\n      const newMeme = await response.json();\n      editing ? onMemeUpdated(newMeme) : onMemeAdded(newMeme);\n      setTitle('');\n      setDescription('');\n      setCategories('');\n      setImage(null);\n      setEditing(false);\n    } catch (error) {\n      console.error('Error submitting meme:', error);\n    }\n  };\n  const handleDelete = async () => {\n    if (!memeToEdit) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/memes/${memeToEdit.id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete meme');\n      onMemeDeleted(memeToEdit.id);\n      setTitle('');\n      setDescription('');\n      setCategories('');\n      setImage(null);\n      setEditing(false);\n    } catch (error) {\n      console.error('Error deleting meme:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        className: \"form-control\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Categories (comma-separated)\",\n        value: categories,\n        onChange: e => setCategories(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: editing ? 'Update Meme' : 'Add Meme'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger ms-2\",\n        type: \"button\",\n        onClick: handleDelete,\n        children: \"Delete Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMemeForm, \"tb/GaZto0slJYMqti6H4igaIHC4=\");\n_c = AddMemeForm;\nexport default AddMemeForm;\nvar _c;\n$RefreshReg$(_c, \"AddMemeForm\");","map":{"version":3,"names":["React","useState","useEffect","AddMemeForm","onMemeAdded","memeToEdit","onMemeUpdated","onMemeDeleted","title","setTitle","description","setDescription","categories","setCategories","image","setImage","editing","setEditing","handleSubmit","e","preventDefault","formData","FormData","append","url","id","method","response","fetch","body","ok","Error","newMeme","json","error","console","handleDelete","target","value","files"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/Components/AddMemeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AddMemeForm = ({ onMemeAdded, memeToEdit, onMemeUpdated, onMemeDeleted }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (memeToEdit) {\r\n      setTitle(memeToEdit.title);\r\n      setDescription(memeToEdit.description);\r\n      setCategories(memeToEdit.categories);\r\n      setEditing(true);\r\n    }\r\n  }, [memeToEdit]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('categories', categories);\r\n    if (image) formData.append('image', image);\r\n\r\n    try {\r\n      const url = editing ? `http://localhost:5000/api/memes/${memeToEdit.id}` : 'http://localhost:5000/api/memes';\r\n      const method = editing ? 'PUT' : 'POST';\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(editing ? 'Failed to update meme' : 'Failed to upload meme');\r\n      }\r\n\r\n      const newMeme = await response.json();\r\n      editing ? onMemeUpdated(newMeme) : onMemeAdded(newMeme);\r\n\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error('Error submitting meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!memeToEdit) return;\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/memes/${memeToEdit.id}`, { method: 'DELETE' });\r\n      if (!response.ok) throw new Error('Failed to delete meme');\r\n      onMemeDeleted(memeToEdit.id);\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error('Error deleting meme:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Categories (comma-separated)\"\r\n          value={categories}\r\n          onChange={(e) => setCategories(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n        />\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          {editing ? 'Update Meme' : 'Add Meme'}\r\n        </button>\r\n        {editing && (\r\n          <button className=\"btn btn-danger ms-2\" type=\"button\" onClick={handleDelete}>\r\n            Delete Meme\r\n          </button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddMemeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}