{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logo from './wiki-logo.png';\nimport './App.css';\nimport AddMemeForm from './Components/AddMemeForm';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:5000/api/memes').then(res => res.json()).then(data => setMemes(data));\n  }, []);\n  const filteredMemes = memes.filter(meme => meme.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Your encyclopedia of internet memes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search for a meme...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"input-group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add meme to WikiMemes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddMemeForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [selectedMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedMeme.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedMeme.image_url,\n              alt: selectedMeme.title,\n              className: \"meme-details-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedMeme.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Categories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), \" \", selectedMeme.categories.join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => setSelectedMeme(null),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-list\",\n            children: filteredMemes.map(meme => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-card\",\n              onClick: () => setSelectedMeme(meme),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: meme.image_url,\n                alt: meme.title,\n                className: \"meme-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"whitesmoke\"\n                },\n                children: \"See meme details..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"meme-title\",\n                children: meme.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  color: \"orange\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)]\n            }, meme.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tYXc6AW+fJlHP7ODflJGaLcm3Gk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","AddMemeForm","App","memes","setMemes","selectedMeme","setSelectedMeme","searchQuery","setSearchQuery","fetch","then","res","json","data","filteredMemes","filter","meme","title","toLowerCase","includes","e","target","value","image_url","description","categories","join","map","color","id"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './wiki-logo.png';\nimport './App.css';\nimport AddMemeForm from './Components/AddMemeForm';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/memes')\n      .then((res) => res.json())\n      .then((data) => setMemes(data));\n  }, []);\n\n  const filteredMemes = memes.filter((meme) =>\n    meme.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ul>          \n          <li><img src={logo} className=\"App-logo\" alt=\"logo\" /></li>\n          <li>Your encyclopedia of internet memes!</li>\n          <li><input \n                type=\"text\"\n                placeholder=\"Search for a meme...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"input-group\"\n              />\n          </li> \n        </ul>\n      </header>\n      <div className='row align-items-start'>\n        <div className='col'>\n            <h3>Add meme to WikiMemes</h3>\n            <AddMemeForm />\n        </div>\n        <div className='col'>\n              <main>\n\n              {selectedMeme ? (\n                  <div className=\"meme-details\">\n                    <h2>{selectedMeme.title}</h2>\n                    <img\n                      src={selectedMeme.image_url}\n                      alt={selectedMeme.title}\n                      className=\"meme-details-image\"\n                    />\n                    <p>{selectedMeme.description}</p>\n                    <p>\n                      <strong>Categories:</strong> {selectedMeme.categories.join(\", \")}\n                    </p>\n                    <button className='btn btn-danger' onClick={() => setSelectedMeme(null)}>Close</button>\n                  </div>\n                ) : (\n\n                <div className=\"meme-list\">\n                  {filteredMemes.map((meme) => (\n                    <div\n                      key={meme.id}\n                      className=\"meme-card\"\n                      onClick={() => setSelectedMeme(meme)}\n                    >\n                      <img src={meme.image_url} alt={meme.title} className=\"meme-image\" />\n                      <p style={{color: \"whitesmoke\"}}>See meme details..</p>\n                      <h3 className=\"meme-title\">{meme.title}</h3>\n                      <hr style={{color: \"orange\"}} ></hr>\n                    </div>\n                  ))}\n                </div>\n                )};\n              </main>\n        </div>\n          <div className='col'>\n          \n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}