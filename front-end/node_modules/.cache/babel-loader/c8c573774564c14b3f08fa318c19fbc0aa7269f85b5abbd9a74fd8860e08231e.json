{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport var streamChunk = /*#__PURE__*/_regeneratorRuntime().mark(function streamChunk(chunk, chunkSize) {\n  var len, pos, end;\n  return _regeneratorRuntime().wrap(function streamChunk$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        len = chunk.byteLength;\n        if (!(!chunkSize || len < chunkSize)) {\n          _context.next = 5;\n          break;\n        }\n        _context.next = 4;\n        return chunk;\n      case 4:\n        return _context.abrupt(\"return\");\n      case 5:\n        pos = 0;\n      case 6:\n        if (!(pos < len)) {\n          _context.next = 13;\n          break;\n        }\n        end = pos + chunkSize;\n        _context.next = 10;\n        return chunk.slice(pos, end);\n      case 10:\n        pos = end;\n        _context.next = 6;\n        break;\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, streamChunk);\n});\nexport var readBytes = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(iterable, chunkSize) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context2.prev = 2;\n          _iterator = _asyncIterator(readStream(iterable));\n        case 4:\n          _context2.next = 6;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n            _context2.next = 12;\n            break;\n          }\n          chunk = _step.value;\n          return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator), \"t0\", 9);\n        case 9:\n          _iteratorAbruptCompletion = false;\n          _context2.next = 4;\n          break;\n        case 12:\n          _context2.next = 18;\n          break;\n        case 14:\n          _context2.prev = 14;\n          _context2.t1 = _context2[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context2.t1;\n        case 18:\n          _context2.prev = 18;\n          _context2.prev = 19;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context2.next = 23;\n            break;\n          }\n          _context2.next = 23;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 23:\n          _context2.prev = 23;\n          if (!_didIteratorError) {\n            _context2.next = 26;\n            break;\n          }\n          throw _iteratorError;\n        case 26:\n          return _context2.finish(23);\n        case 27:\n          return _context2.finish(18);\n        case 28:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n  }));\n  return function readBytes(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar readStream = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {\n    var reader, _yield$_awaitAsyncGen, done, value;\n    return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!stream[Symbol.asyncIterator]) {\n            _context3.next = 3;\n            break;\n          }\n          return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(stream), _awaitAsyncGenerator), \"t0\", 2);\n        case 2:\n          return _context3.abrupt(\"return\");\n        case 3:\n          reader = stream.getReader();\n          _context3.prev = 4;\n        case 5:\n          _context3.next = 7;\n          return _awaitAsyncGenerator(reader.read());\n        case 7:\n          _yield$_awaitAsyncGen = _context3.sent;\n          done = _yield$_awaitAsyncGen.done;\n          value = _yield$_awaitAsyncGen.value;\n          if (!done) {\n            _context3.next = 12;\n            break;\n          }\n          return _context3.abrupt(\"break\", 16);\n        case 12:\n          _context3.next = 14;\n          return value;\n        case 14:\n          _context3.next = 5;\n          break;\n        case 16:\n          _context3.prev = 16;\n          _context3.next = 19;\n          return _awaitAsyncGenerator(reader.cancel());\n        case 19:\n          return _context3.finish(16);\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee2, null, [[4,, 16, 20]]);\n  }));\n  return function readStream(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {\n  var iterator = readBytes(stream, chunkSize);\n  var bytes = 0;\n  var done;\n  var _onFinish = function _onFinish(e) {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n  return new ReadableStream({\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$iterator$next, _done, value, len, loadedBytes;\n        return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return iterator.next();\n            case 3:\n              _yield$iterator$next = _context4.sent;\n              _done = _yield$iterator$next.done;\n              value = _yield$iterator$next.value;\n              if (!_done) {\n                _context4.next = 10;\n                break;\n              }\n              _onFinish();\n              controller.close();\n              return _context4.abrupt(\"return\");\n            case 10:\n              len = value.byteLength;\n              if (onProgress) {\n                loadedBytes = bytes += len;\n                onProgress(loadedBytes);\n              }\n              controller.enqueue(new Uint8Array(value));\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              _onFinish(_context4.t0);\n              throw _context4.t0;\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee3, null, [[0, 15]]);\n      }))();\n    },\n    cancel: function cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","iterable","readStream","stream","Symbol","asyncIterator","reader","getReader","read","done","value","cancel","trackStream","onProgress","onFinish","iterator","bytes","_onFinish","e","ReadableStream","pull","controller","next","close","loadedBytes","enqueue","Uint8Array","reason","return","highWaterMark"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}