{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DDR\\\\Desktop\\\\projects\\\\wiki-memes-react\\\\front-end\\\\src\\\\Components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState('');\n  const [image, setImage] = useState(null);\n  const [editingMeme, setEditingMeme] = useState(null);\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n  const fetchMemes = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/memes');\n      const data = await response.json();\n      setMemes(data);\n    } catch (error) {\n      console.error('Error fetching memes:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('categories', categories);\n    if (image) formData.append('image', image);\n    try {\n      const response = await fetch(editingMeme ? `http://localhost:5000/api/memes/${editingMeme.id}` : 'http://localhost:5000/api/memes', {\n        method: editingMeme ? 'PUT' : 'POST',\n        body: formData\n      });\n      if (!response.ok) throw new Error('Failed to save meme');\n      fetchMemes();\n      setTitle('');\n      setDescription('');\n      setCategories('');\n      setImage(null);\n      setEditingMeme(null);\n    } catch (error) {\n      console.error('Error saving meme:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/memes/${id}`, {\n        method: 'DELETE'\n      });\n      fetchMemes();\n    } catch (error) {\n      console.error('Error deleting meme:', error);\n    }\n  };\n  const handleEdit = meme => {\n    setTitle(meme.title);\n    setDescription(meme.description);\n    setCategories(meme.categories);\n    setEditingMeme(meme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editingMeme ? 'Edit Meme' : 'Add Meme'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Categories\",\n        value: categories,\n        onChange: e => setCategories(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: [editingMeme ? 'Update' : 'Add', \" Meme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Meme List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000${meme.image_url}`,\n            className: \"car\",\n            alt: meme.title,\n            style: {\n              width: \"40\",\n              height: \"40\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: meme.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: meme.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: () => handleEdit(meme),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDelete(meme.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, meme.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"ImiO8iIReN0Bxa6B1YSnLQycSpY=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","Link","Admin","memes","setMemes","title","setTitle","description","setDescription","categories","setCategories","image","setImage","editingMeme","setEditingMeme","fetchMemes","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","formData","FormData","append","id","method","body","ok","Error","handleDelete","handleEdit","meme","target","value","files","map","image_url","width","height"],"sources":["C:/Users/DDR/Desktop/projects/wiki-memes-react/front-end/src/Components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Admin= () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [editingMeme, setEditingMeme] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMemes();\r\n  }, []);\r\n\r\n  const fetchMemes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/memes');\r\n      const data = await response.json();\r\n      setMemes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching memes:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('categories', categories);\r\n    if (image) formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        editingMeme ? `http://localhost:5000/api/memes/${editingMeme.id}` : 'http://localhost:5000/api/memes',\r\n        {\r\n          method: editingMeme ? 'PUT' : 'POST',\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Failed to save meme');\r\n\r\n      fetchMemes();\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategories('');\r\n      setImage(null);\r\n      setEditingMeme(null);\r\n    } catch (error) {\r\n      console.error('Error saving meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/memes/${id}`, { method: 'DELETE' });\r\n      fetchMemes();\r\n    } catch (error) {\r\n      console.error('Error deleting meme:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (meme) => {\r\n    setTitle(meme.title);\r\n    setDescription(meme.description);\r\n    setCategories(meme.categories);\r\n    setEditingMeme(meme);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n     <Link to=\"/\" >Home</Link>\r\n      <h2>{editingMeme ? 'Edit Meme' : 'Add Meme'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <textarea class=\"form-control\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n        <input className=\"form-control\" type=\"text\" placeholder=\"Categories\" value={categories} onChange={(e) => setCategories(e.target.value)} />\r\n        <input className=\"form-control\" type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        <button className='btn btn-primary' type=\"submit\">{editingMeme ? 'Update' : 'Add'} Meme</button>\r\n      </form>\r\n      \r\n      <h2>Meme List</h2>\r\n      <div className=\"card\">\r\n      <ul>\r\n        {memes.map((meme) => (\r\n          <li key={meme.id}>\r\n            <img src={`http://localhost:5000${meme.image_url}`} className=\"car\" alt={meme.title} style={{width: \"40\", height:\"40\"}} />\r\n            <div class=\"card-body\">\r\n            <h3 className='card-title'>{meme.title}</h3>\r\n            <p className='card-text'>{meme.description}</p>\r\n            <button className='btn btn-dark' onClick={() => handleEdit(meme)}>Edit</button>\r\n            <button className='btn btn-danger' onClick={() => handleDelete(meme.id)}>Delete</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}